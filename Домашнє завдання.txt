Beet Seed


№
	Назва методології
	Сильні сторони
	Слабкі сторони
	Для якої галузі є доцільною
	1.
	Водоспад
	1)процес прозорий та передбачуваний
2)легке управління та контроль
3)чітко визначені вимоги
	1)обмежена гнучкість до змін;
2)не підходить для проектів що розвиваються;


	1)інженерія(будівлі,літаки,мости)
2)ПЗ(військові та медичні системи


	2.
	V-модель
	1)має чітко визначені вимоги,які не змінюються протягом проекту;
2)висока якість кінцевого продукту;
3)є стандартом для розробки ПЗ у багатьох організаціях.
	1)жорсткість;
2)не здатність адаптуватися до змін та обмежена гнучкість.
3)вона не передбачає роботу з паралельними подіями та не дозволяє легко вносити зміни у вимоги після початку тестування,що може призвести до затримок та додаткових витрат.
	1)використовується в розробці інформаційних систем;
2)медичних пристроїв;
3)систем управління базами даних
	3.
	Ітераційна
	1)підходить для проектів,де потрібно швидко отримувати відгуки від користувачів;
2)допомагає швидко розробити мінімальний життєздатний продукт,та оцінити,чи продукт відповідає потребам ринку.;
3)дозволяє постійно вдосконалювати продукт,додаючи нові функції та покращуючи якість.
	1)не всі клієнти та проекти підходять;
2)проблема з бюджетом та графіком;
3)можливі проблеми з архітектурою;
4)складнощі в управлінні складною системою.
	Є доцільною для розробки ПЗ,стартапів та продуктів,які потребують постійного розвитку та адаптації до змін у ринку,коли конкретні вимоги не можуть бути повністю визначені на початку проекту.
	4.
	Інкрементна
	1)ПЗ буде створено швидко протягом життєвого циклу ПЗ;
2)Гнучко та дешевше змінювати вимоги та обсяг;
3)На всіх етапах розробки можна вносити зміни;
4)Дана модель дешевша в порівнянні з іншими. 
	1)вимагає гарного планування;
2)кожна фаза інтерації є жорсткою і не накладається одна на одну;
3)усунення проблеми в одному підрозділі вимагає виправлення у всіх підрозділах і займає багато часу. 
	1)У веб-магазинах,де потрібно швидко реагувати на зміни в попиті;
2)для створення онлайн-ігор
	5.
	Спіральна
	1)дозволяє повертатись до попередніх етапів та змінювати їх.
2)допомагає команді контролювати ризики та адаптуватися до змін;
3)використовує ітеративний підхід до розробки,що дозволяє поступово зменшувати ризики та досягати більшої визначенності проекту.
	1)ризик недотримання графіку або бюджету;
2)найкраще підходить для великих проектів,але вимагає досвіду оцінки ризиків;
3)документації більше,оскільки має проміжні фази.
	1)Підходить для розробки ПЗ та інших складних систем,де необхідно врахувати значний ризик та невизначеність.Вона орієнтована на управління цими факторами,що робить її ефективною для проектів з високим рівнем складності.
2)В розробці веб-сайтів,програмних платформ та інших систем,де важлива гнучкість та здатність адаптуватися до змін.
	



 Beet Sprout 


 ⦁ Agile маніфест з'явився як альтернатива традиційним важким методам,таким як Waterfall,і пропонує більш гнучкий адаптивний та взаємодіючий підхід.
Основні причини появи Agile:
1)недостатня гнучкість традиційних методів,вони занадто жорсткі та не враховують змінив вимогах до продукту або умов розробки.
2)Agile підкреслює важливість тісної взаємодії між розробниками та замовником,що дозволяє швидше реагувати на потреби та виправляти помилки;
3)Agile заохочує використання творчого підходу до вирішення проблем;
4)Agile забезпечує швидкий випуск та адаптацію продукту на ринку
Головний принцип Agile: люди та їх взаємодія важливіші за процеси та інструменти.Дуже важлива командна робота та ефективне спілкування в проекті.
Agile підкреслює що хоч інструменти та процеси важливі,але це всього лиш засоби для досягнення мети.Головним двигуном успіху є люди,їхня взаємодія,комунікація,та здатність працювати разом,як згуртована команда.
Agile відіграє важливу роль у розвитку професіоналізму команди та підтримці єдиного рівня знань та навичок у всіх учасників.Команада обмінюється досвідом,навчається новим підходам і підвищує свою кваліфікацію,що сприяє ефективнішій співпраці та комунікації.


⦁ Основні проблеми які Agile маніфест мав вирішити:
* Занадто велика увага до документації та процесів.Маніфест підкреслив важливість робочого продукту та співпраці над детальною документацією
* Недостатня увага до потреб користувачів та клієнтів.Agile підкреслив важливість тісної співпраці з клієнтами та фокусу на потребах користувача
* Нездатність адаптуватися до змін.Маніфест підкреслив важливість гнучкості та здатності швидко реагувати на зміни вимог до продукту.
Чи вдалося це?
Загалом,так.Agile маніфест досягнув своєї мети.Його принципи та цінності використовуються в різних галузях,включаючи розробку ПЗ,і дозволяють команді швидше та ефективніше реагувати на потреб користувачів.


Основні проблеми що вирішив маніфест:
* Повільний процес розробки.Agile маніфест взяв до уваги швидке та інтераційне створення продукту,а не  на довгий процес розробки,що може призвести до затримки та зміни вимог.
* Краща відповідність вимогам.Agile маніфест дозволяє командам краще зрозуміти та враховувати  потреби користувачів на ринку,що дозволяє отримати якісніший продукт.
* Збільшення задоволення користувачів;
* Зростання продуктивності команд.Agile маніфест дозволяє командам краще організувати свою роботу та ефективніше використовувати час, що призводить до зростання ефективності.


Mighty Beet


Як засновник стартапу з мобільним застосунком для обміну світлинами котиків я б обрала Scrum.Ось чому:
1. Гнучкість і швидка адаптація. Agile дозволяє швидко вносити зміни відповідно до зворотнього зв'язку користувачів.
2. Регулярні спринти.Працюючи в коротких спринтах можна поступово додавати нові фільтри,коментарі,топ котиків) і регулярно бачити результат.
3. Зворотній зв'язок  від користувачів.Agile підтримує ітераційний підхід,можна збирати відгуки,аналізувати поведінку користувачів і коригувати подальшу розробку.
4. Мотивація команди.Scrum допомагає створити сильну командуюЦе важливо для стартапа.